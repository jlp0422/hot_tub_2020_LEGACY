{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from './axiosConfig';\nexport var fetcher = function fetcher(path) {\n  var res;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(path));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res.data);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/jeremyphilipson/Desktop/Code/projects/hot_tub_2020/utils.js"],"names":["axios","fetcher","path","get","res","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,eAAlB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHF,KAAK,CAACG,GAAN,CAAUD,IAAV,CADG;;AAAA;AACfE,UAAAA,GADe;AAAA,2CAEdA,GAAG,CAACC,IAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB","sourcesContent":["import axios from './axiosConfig'\n\nexport const fetcher = async path => {\n  const res = await axios.get(path)\n  return res.data\n}\n"]},"metadata":{},"sourceType":"module"}